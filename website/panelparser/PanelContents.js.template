import Link from "next/link"
import redirect from 'nextjs-redirect'

import { TabHead, TabBody, ControlWrapper } from "./styles"
import SegMeter from "./components/SegMeter"
import TabBackground from "./components/TabBackground"
import Fader from "./components/Fader"
import Label from "./components/Label"
import ComboBox from "./components/ComboBox"
import ParameterLabel from "./components/ParameterLabel"
import Button from "./components/Button"
import LED from "./components/LED"
import Rectangle from "./components/Rectangle"
import TabButton from "./components/TabButton"
import TabContainer from "./components/TabContainer"
import ErrorBox from "./components/ErrorBox"

function getSubtab(subtab, depth) {
  if (subtab.length > depth) {
    return subtab[depth];
  }
  return 0;
}

export const tab_count = [TAB_COUNT];
export const has_panel_errors = [HAS_PANEL_ERRORS];

function PanelContents(props) {
  const { selected_tab, pathname, setSubtab, subtab, hiddenTabs } = props;

  // Redirect to panel home if invalid tab
  if (parseInt(selected_tab).toString() !== selected_tab ||
    ((parseInt(selected_tab) >= tab_count ||
        (hiddenTabs && hiddenTabs.includes(selected_tab)) 
      && home_tab !== tab_count))) {
    const Redirect = redirect(pathname);
    return (
      <Redirect>
        <div style={{
          padding: "2em",
          fontSize: 20
        }}>
          Redirecting to&nbsp;
          <Link href={{ pathname: pathname }}>
            <a>Home Tab</a>
          </Link>...
        </div>
      </Redirect>
    )
  }

  return (
    <ControlWrapper style={{display: "inline-block"}}>
[PANEL_JSX]
    </ControlWrapper>
  );
}

export default PanelContents;